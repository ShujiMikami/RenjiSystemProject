2018/11/3
  -ネット環境用に, RJ45とWifi両方装備がいい
  -ネットでのリモート見守りは, サーバーが必要. 利用料を取る方法がいい
  -ネット接続機能のアクティベートに, 会員登録が必要にし, 正しいID, Passを発行し, 入力が認められた時のみアクティベートする
  -ID, Passの使い回しを防ぐため, サーバー側で, 何台使用可能かをパラメータとしてもち, アクティベート済みの台数を管理する
  -同様の理由で, 初回接続時にはデバイス側でもID, Passをサーバーに確認する
  -Wifiや, ネットの接続設定は, PC, スマホをUSBで接続して専用アプリで行うこととし, 専用アプリのアドレスや, サイトアドレスを, QRコードとして筐体に印刷する
  -ESP-WROOM02の駆動用のマイコンと, ESP-WROOMという構成でいく
  -電源は, スマホ充電器のやつからUSB給電とする
  -RaspberryPiでの構成はだめ. すぐ解析, 真似される
  -ESP-WROOMを別モジュール化し, オプションパーツとして売るというのもあり
  -無線式の温度計は, 完全電池交換不能とし, 買い替え需要を狙う

2018/11/5
  -電源は, やはりコンセントからの給電. じゃないとライトが光らせられない

2018/11/7
  要求をSysMLで用意しよう

2018/11/10
  基板は複数枚構造としてよい.
  とりあえずelecrowは成功.
  Ethernetコントローラには, ENC28J60という28pinDIPタイプのコントローラがよさそう, QFNもある

2018/12/13
  Ethernetはとりあえずよしとく. いったんWifiのみでいく. Arduinoで8266制御する

2019/2/8
  ESP-WROOM-02は, Arduinoで使用する限り, I2Cや, SPIでのスレーブ化に対応していないようだ. 
  従って, 8266をマスター, STMをスレーブとしたうえで, 以下のようなフローで動作させる. 
  [STM]メインタスクから, SPIタスクに命令を渡す
  [STM]SPIタスクでは, 未処理の命令がある場合, GPIOを立てる
  [ESP]GPIOが立っているのを検知したら, SPIでSTMに対し, 命令内容を読み込むする. 
  [STM]命令内容を返し, GPIOをLowにする. 
  [STM]命令実行中フラグを立てる. フラグが立っている間は, 次の命令を受け取らず, キューに残す
  [ESP]命令を実行し, 結果を送信する. 
  [STM]結果を受け取り, 待ちフラグをオフにする

  ArduinoのSPIのtransferBytes関数は, 与えるバッファ, データ配列のサイズを, 必ず4の倍数バイトにしないといけない. 
  そのうえで, 必要な送信バイト数だけ指定すればいい. 

